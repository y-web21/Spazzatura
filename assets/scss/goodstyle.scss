$mainVisualHeight: 480px;
$globalNavHeight: 80px;
$circleNavDiameter:100px;
$circleNavInitX: -200px;
$circleNavSplitX: 50px;
$sideTabHeight:3.5rem;
$gotoTopHeight: 50vh;
$clrActivePage: #90c;
@import "my_variables", "my_mixins", "my_common_style" ,"my_anime";


body {
    margin: 0;
    background-color: #999;
    z-index: 0;
    // visibility:hidden;
}

a{
    color: $fClr;
    text-decoration: none;
}

// ============= bs4で代替可能 ===============
// 名前毎流用(HTMLのクラス名そのままで入れ替え可能)
.d-block {
    display: block;
}

.d-inline-block {
    display: inline-block;
}

.mx-auto{
    margin-right: auto;
    margin-left:auto;
}

.h-100{
    height: 100%;
    box-sizing: border-box;
    text-align: center;
    line-height: 5;
}

.container{
    margin: 0 auto;
    width: 95%;
}

.container-fluid{
    margin: 0 auto;
    width: 100%;
}

.float-right{
    float: right;

    &::after {
        clear: both;
    }
}

// grid layoutで対応可能
.d_flex_row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: space-between;
    align-items: center;

    & > img{
        flex:0 1 auto;
    }
}

.bg-white{
    background-color: #fff;
}

// ============= js用パーツ ===============
.nav_active_page{
    background-color: $clrActivePage;
    // animation: key-opacity ease 100ms 0ms 1 normal forwards running;
    transition: 300ms;
}

.hidOnload{
    visibility: hidden;
}

// ============= 汎用 ===============
.sticky_menu {
    padding: 0;
    margin: 0;
    width: 100%;
    height: $globalNavHeight;
    background-color: #999;
    top: $mainVisualHeight;
    left: 0;
    // jsで付与
    // position: fixed;

    & > li > a{
    }
}


.goto_top_tag {
    padding: 0;
    margin: 0;
    width: 10rem;
    height: $sideTabHeight;
    background-color: #444;

    top: $gotoTopHeight;
    left: calc(100% - 3rem);
    transform: rotate(-90deg);
    /*中心回転から起点を中心から左上に*/
    transform-origin: 0% 0%;

    position: fixed;
    display: none;

    border-radius: 0.4rem 0.4rem 0.1rem 0.1rem;

    & > a {
        margin: 0;
        color: $fClr;
        text-align: center;
        line-height: $sideTabHeight - 0.5rem;
        text-decoration: none;
    }
}

.circle_nav {

    & li {
        // position: relative;
        width: $circleNavDiameter;
        height: $circleNavDiameter;
        border-radius: $circleNavDiameter / 2;
        background:  map-get($snsColor, 'twitter');
        margin: 0 0.3rem;

        @include md-g {
            margin: 0 0.6rem;
        }

        &:hover{
            opacity: 0.9;
        }

    }

    & ul{
        // position: absolute;
    }

    & li{
        position: absolute;
        // 初期位置が画面外のため、サイドスクロールバー出るのを防止
        overflow:hidden
    }

    & li{
        // 処理不可の高いタイミングを避けるためディレイを設ける
        animation: key-circle-all 500ms linear 500ms 1 normal forwards running;
    }

    & li:nth-child(1){animation: key-circle-slide1 1100ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(2){animation: key-circle-slide2 0900ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(3){animation: key-circle-slide3 0700ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(4){animation: key-circle-slide4 0500ms ease-out 1000ms 1 normal forwards running;}
    // & li:nth-child(5) a{animation: key-circle-slide5 0300ms ease-out 1000ms 1 normal forwards running;}
    & a {
        position: absolute;
        width: $circleNavDiameter;
        height: $circleNavDiameter;
        border-radius: $circleNavDiameter / 2;
        // top: 50%;
        // left: 50%;
        // transform: translateY(-15%) translateX(-50%);
        // color: $fClr;
        // text-decoration: none;
        text-align: center;
        font-size: 1.2rem;
        line-height: $circleNavDiameter;

        &:hover{
            opacity: 0.9;
        }
    }
}

$imgSizeKurageX: 200px;
$imgSizeKurageY: 200px;

.image_hover{
    &_base{
        position: relative;

        & img{
            width: $imgSizeKurageX;
            height: $imgSizeKurageY;
        }
        &:hover{
            // content:"textoverlay";
            // opacity: 0;
        }
    }
    &_text{
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        margin: 0;
        width: $imgSizeKurageX;
        height: $imgSizeKurageY;
        z-index: 1;
        opacity: 0;
        color:$fClr;
        background-color: #008;
        text-align: center;
        overflow: hidden;
        transition: 300ms opacity ease 0ms;

        &:hover{
            // animation: image_text_overlay 600ms ease-out 0s 1 normal forwards running;
            opacity:1;
            transition: 600ms opacity ease 0ms;
        }
    }
}


// ============= mainVisual ===============
.mainVisual{
    position: relative;
    width: 100%;
    height: $mainVisualHeight;
}

.catch_phrase{
    position: absolute;
    top: 100px;
    left: calc(10vw + 100px);
    font-size: 4rem;
}

.sub_nav{
    position: absolute;
    top: 280px;
    right: 0px;
    // left: calc(100vw - 750px);
}


.glo_nav{
    &_underline{
        @include hover-underline($type: slide, $dir: center, $weight: 6px, $color: #eee);
    }
    &_style{
        width: 8rem;
        height: $globalNavHeight;
    }
}


// ============= oden ===============
.parallax{
    &_background{
        position: relative;
        width: 100%;
        height: 400px;

        // &::after{
        &_entity{
            // content:'';
            position: absolute;
            background:url('../images/kahun.jpg') no-repeat;
            width: 100%;
            height: 1300px;
            top: 0px;
            // overflow: hidden;
            z-index:-100;
            // top: 3500px;
        }
    }
}

.white_box{
    margin: 0;
    width: 100%;
    height: 1000px;
    background-color: #fff;
    z-index: -1;
}

// ============= form ===============
// HTML5のフォームバリデーション
// :required
// :optional
// :valid
// :invalid
// JSのフォームバリデーション
// checkValidity
// formElement.addEventListener('invalid', function(){...}, true);と第3引数にtrueを入れる

.inputInvalid{
    background-color: #d00;
}

.selectedInvalid{
    position: relative;
    &::after{
        position: absolute;
        content: 'aaaaaaaaaaa';
        top: 0;
        left: 300;
        width: 100px;
        height: 100px;
        background-color: #0f0;
    }
}

