$mainVisualHeight: 480px;
$globalNavHeight: 80px;
$circleNavDiameter:100px;
$circleNavInitX: -200px;
$circleNavSplitX: 50px;
$sideTabHeight:3.5rem;
$gotoTopHeight: 50vh;
$clrActivePage: #90c;
@import "my_variables", "my_mixins", "my_common_style" ,"my_anime";


*{
    box-sizing: border-box;
}

body {
    margin: 0;
    // background-color: #ffC;
    // z-index: 0;
    // visibility:hidden;
}

a{
    color: $fClr;
    text-decoration: none;
}

// ============= bs4で代替可能 ===============
// 名前毎流用(HTMLのクラス名そのままで入れ替え可能)
.d-none{
    display: none;
}

.d-block {
    display: block;
}

.d-inline-block {
    display: inline-block;
}

.mx-auto{
    margin-right: auto;
    margin-left:auto;
}

.h-100{
    height: 100%;
    //移動すべき記述
    box-sizing: border-box;
    text-align: center;
    line-height: 5;
}

.container{
    margin: 0 auto;
    width: 95%;
}

.container-fluid{
    margin: 0 auto;
    width: 100%;
}

.float-right{
    float: right;

    &::after {
        clear: both;
    }
}

.ta-c{
    text-align: center;
}

// grid layoutで対応可能
.d_flex_row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: space-between;
    align-items: center;

    & > img{
        flex:0 1 auto;
    }
}

.bg-white{
    background-color: #fff;
}

// ============= js用パーツ ===============
.nav_active_page{
    background-color: $clrActivePage;
    // animation: key-opacity ease 100ms 0ms 1 normal forwards running;
    transition: 300ms;
}

.nav_active_anchor{
    background-color: #69f;
    // animation: key-opacity ease 100ms 0ms 1 normal forwards running;
    transition: 300ms;
}

.hidOnload{
    visibility: hidden;
}

// ============= 汎用 ===============
.sticky_menu {
    padding: 0;
    margin: 0;
    width: 100%;
    height: $globalNavHeight;
    background-color: #999;
    top: $mainVisualHeight;
    left: 0;
    // jsで付与
    // position: fixed;

    & > li > a{
    }
}

$sideTabWidth: 10rem;
.goto_top_tag {
    padding: 0 1.2rem 0 0;
    width: $sideTabWidth;
    height: $sideTabHeight;
    background-color: #444;

    top: $gotoTopHeight;
    left: calc(100% - 3rem);
    /*中心回転から起点を中心から左上に*/
    transform-origin: 0% 0%;
    transform: rotate(-90deg);

    position: fixed;
    display: none;

    border-radius: 0.4rem 0.4rem 0.1rem 0.1rem;

    & > a {
        margin: 0;
        color: $fClr;
        text-align: center;
        line-height: $sideTabHeight - 0.5rem;
        text-decoration: none;
    }

    &::after {
        position: absolute;
        content: '';
        border-top: 2px solid $fClr;
        border-right: 2px solid $fClr;
        top: 18px;
        left: 118px;
        width: 0.6rem;
        height: 0.6rem;
        transform: rotate(45deg);
    }

}

.circle_nav {

    & li {
        width: $circleNavDiameter;
        height: $circleNavDiameter;
        border-radius: $circleNavDiameter / 2;
        background:  map-get($snsColor, 'twitter');
        margin: 0 0.3rem;

        @include md-g {
            margin: 0 0.6rem;
        }

        &:hover{
            // opacity: 0.9;
            transform:scale(1.05,0.95);
        }

    }

    & li{
        position: absolute;
        // 初期位置が画面外のため、サイドスクロールバー出るのを防止
        overflow:hidden;
        // 処理不可の高いタイミングを避けるためディレイを設ける
        animation: key-circle-all 500ms linear 500ms 1 normal forwards running;
    }

    & li:nth-child(1){animation: key-circle-slide1 1100ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(2){animation: key-circle-slide2 0900ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(3){animation: key-circle-slide3 0700ms ease-out 1000ms 1 normal forwards running;}
    & li:nth-child(4){animation: key-circle-slide4 0500ms ease-out 1000ms 1 normal forwards running;}
    // & li:nth-child(5) a{animation: key-circle-slide5 0300ms ease-out 1000ms 1 normal forwards running;}
    & a {
        position: absolute;
        width: $circleNavDiameter;
        height: $circleNavDiameter;
        border-radius: $circleNavDiameter / 2;
        // top: 50%;
        // left: 50%;
        // transform: translateY(-15%) translateX(-50%);
        // color: $fClr;
        // text-decoration: none;
        text-align: center;
        font-size: 1.2rem;
        line-height: $circleNavDiameter;

        &:hover{
            opacity: 0.9;
        }
    }
}

$imgSizeKurageX: 200px;
$imgSizeKurageY: 200px;

.image_hover{
    &_base{
        position: relative;

        & img{
            width: $imgSizeKurageX;
            height: $imgSizeKurageY;
        }
        &:hover{
            // content:"textoverlay";
            // opacity: 0;
        }
    }
    &_text{
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        margin: 0;
        width: $imgSizeKurageX;
        height: $imgSizeKurageY;
        z-index: 1;
        opacity: 0;
        color:$fClr;
        background-color: #008;
        text-align: center;
        overflow: hidden;
        transition: 300ms opacity ease 0ms;

        &:hover{
            // animation: image_text_overlay 600ms ease-out 0s 1 normal forwards running;
            opacity:1;
            transition: 600ms opacity ease 0ms;
        }
    }
}


// ============= mainVisual ===============
.mainVisual{
    position: relative;
    width: 100%;
    height: $mainVisualHeight;
}

.catch_phrase{
    position: absolute;
    top: 100px;
    left: calc(10vw + 100px);
    font-size: 4rem;
}

.sub_nav{
    position: absolute;
    top: 280px;
    right: 0px;
}


.glo_nav{
    &_underline{
        @include hover-underline($type: slide, $dir: center, $weight: 6px, $color: #eee);
    }
    &_style{
        width: 8rem;
        height: $globalNavHeight;
    }
}


// ============= oden ===============
$parallaxBgY: 500px;
$parallaxBgRatio: 2;

// with js
.parallax{
    &_background{
        position: relative;
        width: 100%;
        height: $parallaxBgY;
        overflow: hidden;

        &_entity{
            position: absolute;
            background:url('../images/kafun.jpg') repeat;
            width: 100%;
            height: $parallaxBgY * $parallaxBgRatio;
            // top: 0px;
            top: - ($parallaxBgY * ($parallaxBgRatio - 1));
            left: 0px;
            // debug
            z-index: -20;
        }
    }
}

.white_box{
    margin: 0;
    width: 100%;
    height: 1000px;
    background-color: #fff;
    border: #fff 50px solid;
    z-index: -1;
}

.white_box_500{
    margin: 0;
    width: 100%;
    height: 500px;
    background-color: #fff;
    border: #fff 50px solid;
    z-index: -1;
}

.gray_box_500{
    margin: 0;
    width: 100%;
    height: 500px;
    background-color: #ddd;
    border: #ddd 50px solid;
}

.juhun{
    margin: 0;
    font-size: 5rem;
    position: absolute;
    top: $parallaxBgY / 2;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
}


// ============= form ===============
// HTML5のフォームバリデーション
// :required
// :optional
// :valid
// :invalid
// JSのフォームバリデーション
// checkValidity
// formElement.addEventListener('invalid', function(){...}, true);と第3引数にtrueを入れる

// form ブラウザ依存属性リセット
input, button, textarea, select {
  // margin: 0;
  // padding: 0;
  // background: none;
  // border: none;
  // border-radius: 0;
  // outline: none;
  // -webkit-appearance: none;
  // -moz-appearance: none;
  // appearance: none;
}

form{
    display: inline-block;
}

input,select{
    margin: 0.3rem;
    // width: 200px;
    height: 2rem;
    font-size: 1.5rem;
    // border: 2px solid green;
    // border-radius: 99px;
}

$clrFormIncorrect:red;
$clrFormCorrect:#95fe72;

.inputCorrect{
    outline: 0;
    border: $clrFormCorrect 1px solid;
    box-shadow:0px 0px 2px 1px $clrFormCorrect;
}

.inputIncorrect{
    outline: 0;
    border: $clrFormIncorrect 1px solid;
    box-shadow:0px 0px 2px 1px $clrFormIncorrect;

    &+p{
        width: 10rem;
        height: 2rem;
        color: red;
        font-weight: bold;
        display: inline;

        &::before{
            content: "※";
        }
    }
}

.inquery_style{
    margin: 0 auto;
    width: 80%;
    text-align: center;
    display: flex;

    @include sm-l {
        width: 50%;
    }
}

.selectedInvalid{
    position: relative;
    &::after{
        position: absolute;
        content: 'aaaaaaaaaaa';
        top: 0;
        left: 300;
        width: 100px;
        height: 100px;
        background-color: #0f0;
    }
}

.form_flex{
    & input, & select{
        margin: 0;
        width: 100%;

        @include sm-g {
            margin: 1rem 0;
            width: 50%;
        }
    }

    & p{
        text-align: left !important;
        margin: 1.4rem 0 0.3rem;
        width: 100%;

        @include sm-g {
            margin: 1rem 0;
            width: 50%;
        }
    }

    & textarea{
        margin: 1rem 0;
        width: 100%;

        @include sm-g {
            // width: 50%;
        }
    }
}



input[type="submit"] {
    font-size: 1.0em;
    display: block;
    border: none;
    outline: 0;
    cursor: pointer;
    color: #fff;
    background: #555;
    font-weight: bold;
    height: 3.0em;
    line-height: 3.0em;
    width: 100%;
    padding: 0 2.5em 0 0.8em;
    transition: 0.3s;


    &:hover {
        background: #134767;
    }
}

.button_wrap {
    color: #fff;
    position: relative;
    line-height: 2.8em;
    width: 190px;
    transition: 0.5s;
    margin: 0 auto;

    &::after {
        transition: 0.3s;
        content: "";
        width: .6em;
        height: .6em;
        border-top: 2px solid #fff;
        border-right: 2px solid #fff;
        position: absolute;
        top: 35px;
        right: 26px;
        margin: auto;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform:translateY(-10%) rotate(45deg);
    }

    &:hover::after {
        right: 12px;
    }
}



// ============= footer ===============

.footer_nav{

}