@use "common" as var;
@keyframes key-content-fadein {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes key-sidetab-fadein {
    0% {
        opacity: 0;
        transform: rotate(-90deg) translateY(var.$sideTabHeight);
    }

    100% {
        opacity: 1;
        transform: rotate(-90deg) translateY(0px);
    }
}

@keyframes key-sidetab-fadeout {
    0% {
        opacity: 1;
        transform: rotate(-90deg) translateY(0px);
    }

    100% {
        transform: rotate(-90deg) translateY(var.$sideTabHeight);
        opacity: 0;
        display: none;
        visibility: hidden;
    }
}

@keyframes key-opacity {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes key-circle-all {
    0%      {right: var.$circleNavInitX;}
    100%    {right: var.$circleNavSplitX;}
}

@keyframes key-circle-slide1 {
    0%      {right: var.$circleNavSplitX;}
    100%    {right: (var.$circleNavDiameter + 20px) * 4 + var.$circleNavSplitX;}
}

@keyframes key-circle-slide2 {
    0%      {right: var.$circleNavSplitX;}
    100%    {right: (var.$circleNavDiameter + 20px) * 3 + var.$circleNavSplitX;}
}

@keyframes key-circle-slide3 {
    0%      {right: var.$circleNavSplitX;}
    100%    {right: (var.$circleNavDiameter + 20px) * 2 + var.$circleNavSplitX;}
}

@keyframes key-circle-slide4 {
    0%      {right: var.$circleNavSplitX;}
    100%    {right: (var.$circleNavDiameter + 20px) * 1 + var.$circleNavSplitX;}
}

@keyframes key-circle-slide5 {
    0%      {right: var.$circleNavSplitX;}
    100%    {right: (var.$circleNavDiameter + 20px) * 0 + var.$circleNavSplitX;}
}

.sidetab-fadein {
    display: block !important;
    animation: key-sidetab-fadein 0.3s ease-in 0s 1 normal forwards;
}

.sidetab-fadeout {
    display: block !important;
    animation: key-sidetab-fadeout 0.3s ease-in 0s 1 normal forwards;
}



@mixin hover-underline($type: fade, $dir: null, $weight: 2px, $color: #000) {
  @if $dir == fffl {
    @if $type == fade {
      $dir: 'top';
    } @else if $type == slide {
      $dir: 'center';
    }
  }

  position: relative;
  display: inline-block;
  text-decoration: none;
  &::after {
    position: absolute;
    left: 0;
    content: '';
    width: 100%;
    height: $weight;
    background: $color;
    @if $type == fade {
      transition: .3s;
      opacity: 0;
      visibility: hidden;
      @if $dir == bottom {
        bottom: $weight * -4;
      } @else {
        bottom: $weight;
      }
    } @else if $type == slide {
      bottom: $weight * -2 +12px;
      transform: scale(0, 1);
      transition: transform .3s;
      @if $dir == left-right or $dir == right-in-left {
        transform-origin: left top;
      } @else if $dir == right-left or $dir == left-in-right {
        transform-origin: right top;
      } @else {
        transform-origin: center top;
      }
    }
  }
  &:hover::after {
    @if $type == fade {
      bottom: $weight * -2 + 3px;
      opacity: 1;
      visibility: visible;
    } @else if $type == slide {
      @if $dir == left-in-right {
        transform-origin: left top;
      } @else if $dir == right-in-left {
        transform-origin: right top;
      }
      transform: scale(1, 1);
    }
  }
}

@mixin hover-underline-slow($type: fade, $dir: null, $weight: 2px, $color: #000 , $pd-btm: 2px ,$time: 300ms) {
  @if $dir == fffl {
    @if $type == fade {
      $dir: 'top';
    } @else if $type == slide {
      $dir: 'center';
    }
  }

  position: relative;
  display: inline-block;
  text-decoration: none;
  &::after {
    position: absolute;
    left: 0;
    content: '';
    width: 100%;
    height: $weight;
    background: $color;
    @if $type == fade {
      transition: $time;
      opacity: 0;
      visibility: hidden;
      @if $dir == bottom {
        bottom: $weight - $pd-btm / 2;
      } @else {
        bottom: $weight - $pd-btm / 2;
      }
    } @else if $type == slide {
      bottom: $weight - $pd-btm / 2;
      transform: scale(0, 1);
      transition: transform $time;
      @if $dir == left-right or $dir == right-in-left {
        transform-origin: left top;
      } @else if $dir == right-left or $dir == left-in-right {
        transform-origin: right top;
      } @else {
        transform-origin: center top;
      }
    }
  }
  &:hover::after {
    @if $type == fade {
      bottom: $weight - $pd-btm / 2;
      opacity: 1;
      visibility: visible;
    } @else if $type == slide {
      @if $dir == left-in-right {
        transform-origin: left top;
      } @else if $dir == right-in-left {
        transform-origin: right top;
      }
      transform: scale(1, 1);
    }
  }
}



//3d宣言をすることでハードウェアレンダリング(GPU)をブラウザに促す
.ex-motion {transform: translate3d(0,0,0);}
